type Query {
    """
    Performs a semantic search with the specified search query, finding segments of media records & assessments which
    are most relevant.

    Returns by default 10 results, or the amount specified by "count".

    Returns only segments from contents in the whitelist.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_semanticSearch(queryText: String!,
        count: Int = 10,
        contentWhitelist: [UUID!]! = []) : [SemanticSearchResult!]!,

    """
    Performs a semantic search which searches for media record segment entities & assessment entities which are the most
    similar to the segment with the provided id.

    Returns by default 10 results, or the amount specified by "count".

    Returns only segments from contents in the whitelist.

    If excludeEntitiesWithSameParent is set to true, only search results which have different parent entities to the
    parent entity of the provided one get returned.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getSemanticallySimilarEntities(segmentId: UUID!,
        count: Int = 10,
        contentWhitelist: [UUID!]! = [],
        excludeEntitiesWithSameParent: Boolean = true): [SemanticSearchResult!]!

    """
    Gets all links between segments of media records of the specified content.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getMediaRecordLinksForContent(contentId: UUID!): [MediaRecordSegmentLink!]!

    """
    Gets the document segments of the specified media record.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getMediaRecordSegments(mediaRecordId: UUID!): [MediaRecordSegment!]!

    """
    Gets the media record segment with the specified ID. Throws error if segment does not exist.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getMediaRecordSegmentById(mediaRecordSegmentId: UUID!): MediaRecordSegment!

    """
    Gets the closed captions of the specified media record if there are any, otherwise returns null.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getMediaRecordCaptions(mediaRecordId: UUID!): String
    """
    Gets a summary of the specified media record's contents in the form of bullet points. Returns a list of strings
    where each string is a bullet point of the summary.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getMediaRecordSummary(mediaRecordId: UUID!): [String!]!

    """
    Gets the suggested tags of the specified media record. Returns a list of strings
    where each string is a tag.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getMediaRecordSuggestedTags(mediaRecordId: UUID!): [String!]!

    """
    Gets the suggested tags of the specified  assessment. Returns a list of strings
    where each string is a tag.

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getAssessmentSuggestedTags(assessmentId: UUID!): [String!]!

    """
    Gets the DocProcAI ingestion processing state of the specified media records. "UNKNOWN" is returned if the specified
    ID is unknown to the service (either because a media record with the given ID does not exist or because the media
    record has not yet ever been enqueued into the service's processing system).

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getMediaRecordsAiProcessingProgress(mediaRecordIds: [UUID!]!): [AiEntityProcessingProgress!]!

    """
    Gets the DocProcAI ingestion processing state of the contents/assessments with the specified IDs.

    If the content is a MediaContent, this is the progress of the linking step of the MediaContent's media record. If
    the content is an Assessment, this is the progress of the assessment text embedding generation.

    "UNKNOWN" is returned if the specified ID is unknown to the service (either because a content with the given ID
    does not exist or because the content has not yet ever been enqueued into the service's processing system).

    ⚠️ This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ⚠️
    """
    _internal_noauth_getContentsAiProcessingProgress(contentIds: [UUID!]!): [AiEntityProcessingProgress!]!
}

type MediaRecordSegmentLink {
    segment1: MediaRecordSegment!
    segment2: MediaRecordSegment!
}

interface SemanticSearchResult {
    """
    The similarity score of the search result.
    """
    score: Float!
}

type MediaRecordSegmentSemanticSearchResult implements SemanticSearchResult {
    """
    The similarity score of the search result.
    """
    score: Float!
    """
    The media record segment this search result is referencing.
    """
    mediaRecordSegment: MediaRecordSegment!
}

type AssessmentSemanticSearchResult implements SemanticSearchResult {
    """
    The similarity score of the search result.
    """
    score: Float!
    """
    ID of the assessment this search result is referencing.
    """
    assessmentId: UUID!
}

type AssessmentContentReference {
    assessmentId: UUID!
}

interface MediaRecordSegment {
    """
    UUID of this segment.
    """
    id: UUID!
    """
    UUID of the media record this segment is part of.
    """
    mediaRecordId: UUID!
    """
    Base64-encoded image thumbnail for this segment.
    """
    thumbnail: String!
    """
    Title of this segment.
    """
    title: String
}

type DocumentRecordSegment implements MediaRecordSegment {
    """
    UUID of this segment.
    """
    id: UUID!
    """
    UUID of the media record this search result references.
    """
    mediaRecordId: UUID!
    """
    Page of the document this search result references.
    """
    page: Int!
    """
    The text snippet of the document this search result references.
    """
    text: String!
    """
    Base64-encoded image thumbnail for this segment.
    """
    thumbnail: String!
    """
    Title of this segment.
    """
    title: String
}

type VideoRecordSegment implements MediaRecordSegment {
    """
    UUID of this segment.
    """
    id: UUID!
    """
    UUID of the media record this search result references.
    """
    mediaRecordId: UUID!
    """
    Start time in seconds of the snippet of the video this search result references.
    """
    startTime: Int!
    """
    Text on the screen during this video snippet.
    """
    screenText: String!
    """
    Textual transcript of the spoken text during the video snippet this search result references.
    """
    transcript: String!
    """
    Base64-encoded image thumbnail for this segment.
    """
    thumbnail: String!
    """
    Title of this segment.
    """
    title: String
}

type AiEntityProcessingProgress {
    entityId: UUID!
    state: AiEntityProcessingState!
    queuePosition: Int
}

enum AiEntityProcessingState {
    UNKNOWN,
    ENQUEUED,
    PROCESSING,
    DONE
}